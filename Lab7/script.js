function randomIntFromInterval(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
}

const GUESSED_WORD = "Hello"; // –û—Ç–≥–∞–¥—ã–≤–∞–µ–º–æ–µ —Å–ª–æ–≤–æ
const LETTER_CLASS_NAME = "letter"; // –ö–ª–∞—Å—Å –¥–ª—è –±—É–∫–≤
const wordContainer = document.getElementById("word"); // <div id="word" class="word-container"></div>
const resultContainer = document.getElementById("result"); //  <div class="result" id="result"></div>

const startBtn = document.getElementById("start-game-btn"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
const letterBtn = document.getElementById("letter-btn"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–≥–∞–¥—ã–≤–∞–Ω–∏—è –±—É–∫–≤—ã
const newGameBtn = document.getElementById("new-game-btn"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç <p/>
// c —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–ª–∞—Å—Å–æ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —á—Ç–æ –±—ã –º—ã –µ–≥–æ –º–æ–≥–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ DOM
const createInfoText = (text, className) => {
  const element = document.createElement("p");
  element.classList.add(className);
  element.textContent = text;
  return element;
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç <div/> —Å –∫–ª–∞—Å—Å–æ–º LETTER_CLASS_NAME
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —á—Ç–æ –±—ã –º–æ–≥–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—è –¥–ª—è —Å–ª–æ–≤–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä –≤ —Ü–∏–∫–ª–µ)
const createLetterBox = () => {
  const container = document.createElement("div");
  container.classList.add(LETTER_CLASS_NAME);
  return container;
};

function startGame() {
  // –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ü–∏–∫–ª–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –±—É–∫–≤—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–µ
  for (let i = 0; i < GUESSED_WORD.length; i++) {
    wordContainer.appendChild(createLetterBox());
  }
  startBtn.style.display = "none"; // –°–∫—Ä—ã—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É
  letterBtn.style.display = "block"; // –ü–æ–∫–∞–∑ –∫–Ω–æ–ø–∫–∏ —É–≥–∞–¥–∞—Ç—å –±—É–∫–≤—É
}
startBtn.addEventListener("click", startGame);

let countGuessedWords = 0;
function guessLetter() {
  const word = prompt("–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É"); // –í–≤–æ–¥–∏–º–∞—è –±—É–∫–≤–∞
  resultContainer.innerHTML = ""; // –æ—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—É—é –±—É–∫–≤—É
  if (word !== null) {
    // –õ–æ–≥–∏–∫–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã
    if (GUESSED_WORD[countGuessedWords].toLowerCase() === word.toLowerCase()) {
      // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –±—É–∫–≤—ã –ø–æ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å LETTER_CLASS_NAME –∏ –æ–±—Ä–∞—â–∞–µ–º—Å—è –ø–æ –∏–Ω–¥–µ–∫—Å—É
      const element = document.querySelectorAll(`.${LETTER_CLASS_NAME}`)[
        countGuessedWords
      ];
      element.classList.add("letter--guessed");
      element.textContent = GUESSED_WORD[countGuessedWords];
      countGuessedWords++;

      resultContainer.appendChild(
        createInfoText(
          `${this.players[this.randomPlayer].name}'s turn`,
          "current-player"
        )
      );
    } else {
      resultContainer.appendChild(
        createInfoText("You are wrong! ‚ùå", "red-text")
      ); // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –±—É–∫–≤–∞ –Ω–µ –æ—Ç–≥–∞–¥–∞–Ω–∞
      resultContainer.appendChild(
        createInfoText(
          `${this.players[this.nextPlayer()].name}'s turn`,
          "next-player"
        )
      );
    }
  }

  // –ï—Å–ª–∏ –∫–æ–ª-–≤–æ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤ —Ä–∞–≤–Ω–æ –¥–ª–∏–Ω–µ —Å—Ç—Ä–æ–∫–∏ –∑–Ω–∞—á–∏—Ç —Å–ª–æ–≤–æ –æ—Ç–≥–∞–¥–∞–Ω–æ, —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (countGuessedWords === GUESSED_WORD.length) {
    resultContainer.innerHTML = "";
    resultContainer.appendChild(
      createInfoText(
        `${this.players[this.randomPlayer].name} wins!! üéâ üéâ üéâ `,
        "win-text"
      )
    );
    newGameBtn.style.display = "block"; // –ü–æ–∫–∞–∑ –∫–Ω–æ–ø–∫–∏ –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
    letterBtn.style.display = "none"; // –°–∫—Ä—ã—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è –±—É–∫–≤—ã
  }
}

// –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–æ–≤–æ–π –∏–≥—Ä—ã
newGameBtn.addEventListener("click", () => {
  window.location.reload();
});

class Player {
  constructor(name) {
    this.name = name;
  }
}

class Game {
  constructor(players) {
    this.players = players;
    this.randomPlayer = randomIntFromInterval(0, this.players.length - 1);

    this.nextPlayer = function () {
      if (this.randomPlayer < this.players.length - 1) return this.randomPlayer++;
      else return (this.randomPlayer = 0);
    };
  }

  playerCheck() {
    resultContainer.append(
      createInfoText(`${this.players[this.randomPlayer].name}'s turn`)
    );
  }
}

const playersArr = [new Player("John"), new Player("Ivan"), new Player("Lisa")];
const gameInit = new Game(playersArr);

startBtn.onclick = function () {
  gameInit.playerCheck();
};

letterBtn.addEventListener("click", guessLetter.bind(gameInit));

/*
  –ó–∞–¥–∞–Ω–∏–µ 2
  –°–¥–µ–ª–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è DOM createElement –∏ innerText
  –ü–æ–¥—Å–≤–µ—Ç–∏—Ç—å —è—á–µ–π–∫—É –Ω–∞–¥ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫—É—Ä—Å–æ—Ä –º—ã—à–∏
*/
const table = document.createElement("table");
for (let i = 0; i <= 9; i++) {
  const row = document.createElement("tr");
  for (let j = 0; j <= 9; j++) {
    const col = document.createElement("td");
    let val = i * j;
    if (val === 0) {
      val = i || j;
      val = val ? val : "";
      col.classList.add("header");
    }
    col.innerHTML = val;
    row.appendChild(col);
  }
  table.appendChild(row);
}
document.getElementById("table_wrapper").appendChild(table);

const tds = table.querySelectorAll("td");
tds.forEach((td) => {
  td.addEventListener("mouseover", (e) => {
    td.style.cursor = "pointer";
    if (td.classList.contains("header")) td.style.background = "#ccf";
    else td.style.background = "yellow";
  });
  td.addEventListener("mouseout", (e) => {
    if (td.classList.contains("header")) td.style.background = "#ccf";
    else td.style.background = "none";
  });
});
